// Generated by CoffeeScript 1.6.3
(function() {
  var Basement, Character, Goblin, Monster, Player, Troll, build_basement, first_move, main,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Basement = (function() {
    function Basement(dimensions) {
      this.width = dimensions.width;
      this.height = dimensions.height;
      this.state = [];
      this.characters = {};
    }

    Basement.prototype.generate = function() {
      var x, y, _i, _j, _ref, _ref1;
      for (y = _i = 0, _ref = this.height; 0 <= _ref ? _i <= _ref : _i >= _ref; y = 0 <= _ref ? ++_i : --_i) {
        this.state[y] = [];
        for (x = _j = 0, _ref1 = this.width; 0 <= _ref1 ? _j <= _ref1 : _j >= _ref1; x = 0 <= _ref1 ? ++_j : --_j) {
          this.state[y][x] = '.';
        }
      }
      return this.perimeter_wall();
    };

    Basement.prototype.perimeter_wall = function() {
      var x, y, _i, _j, _ref, _ref1, _results;
      for (x = _i = 0, _ref = this.width; 0 <= _ref ? _i <= _ref : _i >= _ref; x = 0 <= _ref ? ++_i : --_i) {
        this.state[0][x] = '#';
        this.state[this.height][x] = '#';
      }
      _results = [];
      for (y = _j = 0, _ref1 = this.height; 0 <= _ref1 ? _j <= _ref1 : _j >= _ref1; y = 0 <= _ref1 ? ++_j : --_j) {
        this.state[y][0] = '#';
        _results.push(this.state[y][this.width] = '#');
      }
      return _results;
    };

    Basement.prototype.down_stairs = function(p) {
      return this.state[p.y][p.x] = '>';
    };

    Basement.prototype.up_stairs = function(p) {
      return this.state[p.y][p.x] = '<';
    };

    Basement.prototype.spawn = function(character) {
      var p;
      p = character.position;
      this.characters[character.name] = character;
      return this.state[p.y][p.x] = character.symbol;
    };

    Basement.prototype.move = function(character, direction) {
      var c, p;
      c = this.characters[character.name];
      p = c.position;
      this.state[p.y][p.x] = '.';
      c.move(direction);
      p = c.position;
      return this.state[p.y][p.x] = c.symbol;
    };

    Basement.prototype.print = function() {
      var row, _i, _len, _ref, _results;
      _ref = this.state;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        row = _ref[_i];
        _results.push(console.log(row.join('')));
      }
      return _results;
    };

    Basement.prototype.clear = function() {
      return process.stdout.write('\u001B[2J\u001B[0;0f');
    };

    return Basement;

  })();

  Character = (function() {
    function Character(position) {
      this.position = position;
    }

    Character.prototype.move = function(direction) {
      switch (direction) {
        case 'up':
          return this.position.y -= 1;
        case 'down':
          return this.position.y += 1;
        case 'left':
          return this.position.x -= 1;
        case 'right':
          return this.position.x += 1;
      }
    };

    return Character;

  })();

  Monster = (function(_super) {
    __extends(Monster, _super);

    function Monster(name, position) {
      this.name = name;
      this.position = position;
    }

    return Monster;

  })(Character);

  Troll = (function(_super) {
    __extends(Troll, _super);

    function Troll(name, position) {
      this.name = name;
      this.position = position;
      this.symbol = 'T';
    }

    return Troll;

  })(Monster);

  Goblin = (function(_super) {
    __extends(Goblin, _super);

    function Goblin(name, position) {
      this.name = name;
      this.position = position;
      this.symbol = 'G';
    }

    return Goblin;

  })(Monster);

  Player = (function(_super) {
    __extends(Player, _super);

    function Player(position) {
      this.position = position;
      this.symbol = '@';
    }

    return Player;

  })(Character);

  main = function() {
    var b1;
    b1 = build_basement();
    return setTimeout(function() {
      return first_move(b1, 500);
    });
  };

  build_basement = function() {
    var b1, crok, griphook, harry;
    b1 = new Basement({
      width: 80,
      height: 20
    });
    crok = new Troll('Crok', {
      x: 1,
      y: 2
    });
    griphook = new Goblin('Griphook', {
      x: 3,
      y: 4
    });
    harry = new Player({
      x: 10,
      y: 10
    });
    b1.generate();
    b1.spawn(crok);
    b1.spawn(griphook);
    b1.spawn(harry);
    b1.down_stairs({
      x: 20,
      y: 18
    });
    b1.print();
    return b1;
  };

  first_move = function(b1) {
    b1.clear();
    b1.move('Crok', 'down');
    b1.move('Griphook', 'right');
    b1.move('harry', 'up');
    return b1.print();
  };

  main();

}).call(this);
